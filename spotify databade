# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

-i wanted to see the top 10 tracks (along with artist name) based on popularity of track- 
SELECT artist_name, track_name, popularity FROM Spotifydata 
WHERE popularity > 90
ORDER BY popularity DESC
LIMIT 10;  

----------------------------------------------------------------------------------

-here i wanted to see how many times Bad Bunny's music made this list (also based on popularity of a track)-
SELECT artist_name, track_name, popularity FROM Spotifydata 
WHERE artist_name = 'Bad Bunny'
ORDER BY popularity DESC; 

----------------------------------------------------------------------------------

-in this last one i wanted to compare danceability (along with energy) of tracks with a limit to top 15-
SELECT artist_name, track_name, danceability, energy FROM Spotifydata
GROUP BY artist_name 
ORDER BY danceability DESC
LIMIT 15 
